/**
 * @package   gradingform_frubric
 * @copyright 2021 Veronica Bermegui
 * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
 */
define("gradingform_frubric/evaluate_control",["gradingform_frubric/feditor_helper"],(function(FeditorHelper){function EvaluateControl(){this.criteria=JSON.parse(document.querySelector(".form-frubric-evaluate").getAttribute("data-criteria")).criteria,this.definitionID=document.getElementById("advancedgrading-criteria").getAttribute("data-definition-id")}return EvaluateControl.prototype.main=function(){this.setupEvents(this.criteria)},EvaluateControl.prototype.setupEvents=function(criteria){criteria.forEach((function(element){var self=this,level=document.getElementById("advancedgrading-frubric-criteria-".concat(element.criteriaid)).children[0].children;document.getElementById("advancedgrading-frubric-criteria-".concat(element.criteriaid,"-level-grade")).addEventListener("focus",self.focusEvaluationHandler.bind(this,self)),Array.from(level).forEach((function(leveldetails){var descriptors=leveldetails.children[1].children;Array.from(descriptors).forEach((function(descriptor){if(descriptor instanceof HTMLInputElement&&"checkbox"===descriptor.type)descriptor.addEventListener("click",self.clickDescriptorHandler.bind(self))}))}),self)}),this)},EvaluateControl.prototype.clickDescriptorHandler=function(e){var id=e.target.id.split("-"),criteriaID=id[3],levelID=id[5],descriptorID=id[id.length-1],levelsInput=JSON.parse(FeditorHelper.getLevelsJSON(criteriaID));levelsInput[levelID].definition.replace(/\\/g,"");var definition=JSON.parse(levelsInput[levelID].definition),levelDescriptors=levelsInput[levelID].descriptors,descriptorids=[];if(levelDescriptors.forEach((function(element){descriptorids.push(element.descriptorid)}),descriptorids),-1==descriptorids.indexOf(parseInt(descriptorID))){var newdesc={checked:!1,descText:document.getElementById("advancedgrading-frubric-criteria-".concat(criteriaID,"-level-").concat(levelID,"-descriptor-").concat(descriptorID)).nextSibling.textContent,delete:0,descriptorid:descriptorID};levelDescriptors.push(newdesc)}levelDescriptors.filter((function(descriptor){descriptor.descriptorid==descriptorID&&(descriptor.checked=!descriptor.checked)}),descriptorID),definition.descriptors=levelDescriptors,definition=JSON.stringify(definition),levelsInput[levelID].definition=definition,document.getElementById("advancedgrading-frubric-".concat(criteriaID,"-leveljson")).value=JSON.stringify(levelsInput),document.getElementById("advancedgrading-frubric-".concat(criteriaID,"-leveljsonaux")).value=JSON.stringify(levelsInput)},EvaluateControl.prototype.focusEvaluationHandler=function(s,e){document.getElementById(e.target.id).addEventListener("change",s.onChangeEvaluationHandler.bind(this,s)),document.getElementById(e.target.id).addEventListener("change",s.sumTotal.bind(this,s))},EvaluateControl.prototype.onChangeEvaluationHandler=function(s,e){e.target.classList.remove("total-input-error");var enteredscore=parseFloat(document.getElementById(e.target.id).value),maxscore=document.getElementById(e.target.id+"-out-of-value").innerText.split("/");enteredscore>(maxscore=parseFloat(maxscore[maxscore.length-1]))||enteredscore<0?e.target.classList.add("total-input-error"):document.getElementById(e.target.id).value=enteredscore},EvaluateControl.prototype.sumTotal=function(s,e){var tables=document.getElementById("advancedgrading-criteria").querySelectorAll(".total-input"),sum=0,haserror=!1,i=0;tables.forEach((function(t,index){t.classList.contains("result")||t.classList.contains("total-input-error")||(sum+=parseFloat(t.value)),t.classList.contains("result")&&(i=index),t.classList.contains("total-input-error")&&(haserror=!0);var maxtotal=parseFloat(tables[i].getAttribute("max"));!haserror&&sum<=maxtotal&&(tables[i].value=sum)}))},{init:function(){(new EvaluateControl).main()}}}));

//# sourceMappingURL=evaluate_control.min.js.map