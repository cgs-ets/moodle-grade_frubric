{"version":3,"sources":["../src/submission_control.js"],"names":["define","SubmissionControl","definitionID","self","submiteddata","JSON","parse","document","querySelector","getAttribute","getElementById","prototype","main","checkCriteria","checkScore","criteria","Object","entries","forEach","key","value","scoregiven","classList","remove","hasAttribute","hidden","add","removeAttribute","maxallowed","innerText","split","length","parseFloat","enteredscore","maxscore","init","control"],"mappings":"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","sourcesContent":["/* eslint-disable max-len */\n/* eslint-disable promise/always-return */\n// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n\n/**\n * @package   gradingform_frubric\n * @copyright 2021 Veronica Bermegui\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(['core/log'],\n    function (Log) {\n        'use strict';\n\n        function init(submiteddata, definitionID) {\n\n            submiteddata = JSON.parse(submiteddata);\n            const control = new SubmissionControl(submiteddata, definitionID);\n            control.main(submiteddata, definitionID);\n        }\n\n        function SubmissionControl(definitionID) {\n            const self = this;\n            self.definitionID = definitionID;\n            self.submiteddata = JSON.parse(document.querySelector('.form-frubric-evaluate').getAttribute('data-values'));\n            self.definitionID = document.getElementById('advancedgrading-criteria').getAttribute('data-definition-id');\n\n\n        }\n\n        SubmissionControl.prototype.main = function () {\n            const self = this;\n            self.checkCriteria(self.submiteddata);\n            self.checkScore(self.criteria);\n        }\n\n        SubmissionControl.prototype.checkCriteria = function () {\n            var self = this;\n            Object.entries(self.submiteddata.criteria).forEach(([key, value]) => {\n\n                // Check score given to the criterion\n                const scoregiven = document.getElementById(`advancedgrading-frubric-criteria-${key}-level-grade`);\n                if (scoregiven.value != '') {\n                    scoregiven.classList.remove('total-input-error');\n                    if (!document.querySelector('span.frubric-no-descriptor-error').hasAttribute('hidden')) {\n                        document.querySelector('span.frubric-no-descriptor-error').hidden = true;\n                    }\n                } else {\n                    scoregiven.classList.add('total-input-error');\n                    document.querySelector('span.frubric-no-descriptor-error').removeAttribute('hidden');\n                }\n\n                let maxallowed = document.getElementById(`advancedgrading-frubric-criteria-${key}-level-grade-out-of-value`).innerText.split('/');\n                maxallowed = maxallowed[maxallowed.length - 1];\n\n                if (parseFloat(scoregiven.value) > parseFloat(maxallowed)) {\n                    scoregiven.classList.add('total-input-error');\n                }\n\n                if (!document.querySelector('span.frubric-no-score-error').hasAttribute('hidden')) {\n                    document.querySelector('span.frubric-no-score-error').hidden = true;\n                }\n            });\n\n        }\n\n        SubmissionControl.prototype.checkScore = function () {\n            var self = this;\n            let scoregiven = document.getElementById(`advancedgrading-${self.definitionID}-frubric-total-grade`);\n            scoregiven.classList.remove('total-input-error');\n            let enteredscore = parseFloat(scoregiven.value);\n            let maxscore = document.getElementById(`advancedgrading-${self.definitionID}-frubric-total-grade-given`).innerText.split('/');\n            maxscore = parseFloat(maxscore[maxscore.length - 1]);\n          \n            if (enteredscore > maxscore || enteredscore < 0) {\n                scoregiven.classList.add('total-input-error');\n            }\n\n        }\n\n\n\n\n\n\n\n        return {\n            init: init\n        };\n    });"],"file":"submission_control.min.js"}