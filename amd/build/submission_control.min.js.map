{"version":3,"sources":["../src/submission_control.js"],"names":["define","SubmissionControl","submiteddata","definitionID","self","document","getElementById","getAttribute","prototype","main","checkCriteria","checkScore","criteria","Object","entries","forEach","key","value","scoregiven","classList","remove","querySelector","hasAttribute","hidden","add","removeAttribute","maxallowed","innerText","split","length","parseFloat","totaldescriptor","totalnotchecked","values","JSON","parse","leveljson","val","descriptors","d","checked","enteredscore","maxscore","init","control"],"mappings":"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","sourcesContent":["/* eslint-disable max-len */\n/* eslint-disable promise/always-return */\n// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n\n/**\n * @package   gradingform_frubric\n * @copyright 2021 Veronica Bermegui\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(['core/log'],\n    function (Log) {\n        'use strict';\n\n        function init(submiteddata, definitionID) {\n           \n            submiteddata = JSON.parse(submiteddata);\n            const control = new SubmissionControl(submiteddata, definitionID);\n            control.main(submiteddata, definitionID);\n        }\n\n        function SubmissionControl(submiteddata, definitionID) {\n            const self = this;\n            self.definitionID = definitionID;\n            self.submiteddata = submiteddata;\n            self.definitionID = document.getElementById('advancedgrading-criteria').getAttribute('data-definition-id');\n\n\n        }\n\n        SubmissionControl.prototype.main = function () {\n            const self = this;\n            self.checkCriteria(self.submiteddata);\n            self.checkScore(self.criteria);\n        }\n\n\n\n        SubmissionControl.prototype.checkCriteria = function () {\n            var self = this;\n            Object.entries(self.submiteddata.criteria).forEach(([key, value]) => {\n\n                // Check score given to the criterion\n                const scoregiven = document.getElementById(`advancedgrading-frubric-criteria-${key}-level-grade`);\n                if (scoregiven.value != '') {\n                    scoregiven.classList.remove('total-input-error');\n                    if (!document.querySelector('span.frubric-no-descriptor-error').hasAttribute('hidden')) {\n                        document.querySelector('span.frubric-no-descriptor-error').hidden = true;\n                    }\n                } else {\n                    scoregiven.classList.add('total-input-error');\n                    document.querySelector('span.frubric-no-descriptor-error').removeAttribute('hidden');\n                }\n\n                let maxallowed = document.getElementById(`advancedgrading-frubric-criteria-${key}-level-grade-out-of-value`).innerText.split('/');\n                maxallowed = maxallowed[maxallowed.length - 1];\n\n                if (parseFloat(scoregiven.value) > parseFloat(maxallowed)) {\n                    scoregiven.classList.add('total-input-error');\n                }\n\n                // Check that at least one  descriptor is selected\n                var totaldescriptor = 0;\n                var totalnotchecked = 0;\n                \n                Object.values(JSON.parse(value.leveljson)).forEach(val => {\n                    totaldescriptor += val.descriptors.length;\n                    \n                    val.descriptors.forEach(d => {\n                        if (d.checked == false) {\n                            totalnotchecked++;\n                        }\n                    });\n\n                  \n                });\n\n                if (totaldescriptor == totalnotchecked) {\n                    document.getElementById(`advancedgrading-frubric-criteria-${key}`).classList.add('error_no_descriptors_selected'); \n                    document.querySelector('span.frubric-no-score-error').removeAttribute('hidden');\n                } else {\n                    if (!document.querySelector('span.frubric-no-score-error').hasAttribute('hidden')) {\n                        document.querySelector('span.frubric-no-score-error').hidden = true;\n                    }\n                }\n            });\n\n        }\n\n        SubmissionControl.prototype.checkScore = function () {\n            var self = this;\n            let scoregiven = document.getElementById(`advancedgrading-${self.definitionID}-frubric-total-grade`);\n            scoregiven.classList.remove('total-input-error');\n            let enteredscore = parseFloat(scoregiven.value);\n            let maxscore = document.getElementById(`advancedgrading-${self.definitionID}-frubric-total-grade-given`).innerText.split('/');\n            maxscore = parseFloat(maxscore[maxscore.length - 1]);\n\n            if (enteredscore > maxscore || enteredscore < 0) {\n                scoregiven.classList.add('total-input-error');\n            }\n\n        }\n\n      \n\n        \n\n\n\n        return {\n            init: init\n        };\n    });"],"file":"submission_control.min.js"}