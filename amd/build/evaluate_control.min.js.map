{"version":3,"file":"evaluate_control.min.js","sources":["../src/evaluate_control.js"],"sourcesContent":["/* eslint-disable max-len */\n/* eslint-disable promise/always-return */\n// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n\n/**\n * @package   gradingform_frubric\n * @copyright 2021 Veronica Bermegui\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(['gradingform_frubric/feditor_helper'],\n    function (FeditorHelper) {\n        'use strict';\n\n        function init() {\n            const control = new EvaluateControl();\n            control.main();\n        }\n\n        function EvaluateControl() {\n            const self = this;\n            self.criteria = (JSON.parse(document.querySelector('.form-frubric-evaluate').getAttribute('data-criteria')).criteria);\n            self.definitionID = document.getElementById('advancedgrading-criteria').getAttribute('data-definition-id');\n        }\n\n        EvaluateControl.prototype.main = function () {\n            const self = this;\n            self.setupEvents(self.criteria);\n        }\n\n        EvaluateControl.prototype.setupEvents = function (criteria) {\n            const self = this;\n\n            criteria.forEach(function (element) {\n                const self = this;\n                const criterion = document.getElementById(`advancedgrading-frubric-criteria-${element.criteriaid}`);\n                const level = criterion.children[0].children;\n                const score = document.getElementById(`advancedgrading-frubric-criteria-${element.criteriaid}-level-grade`);\n                score.addEventListener('focus', self.focusEvaluationHandler.bind(this, self));\n\n                Array.from(level).forEach(function (leveldetails) {\n                    const descriptorsCollection = leveldetails.children[1];\n                    const descriptors = descriptorsCollection.children;\n                    Array.from(descriptors).forEach(function (descriptor) {\n\n                        if (descriptor instanceof HTMLInputElement) {\n                            switch (descriptor.type) {\n                                case 'checkbox':\n                                    descriptor.addEventListener('click', self.clickDescriptorHandler.bind(self));\n                                    break;\n                            }\n                        }\n                    });\n                }, self);\n\n            }, self);\n\n        }\n\n        EvaluateControl.prototype.clickDescriptorHandler = function (e) {\n            const id = (e.target.id).split('-');\n            const criteriaID = id[3];\n            const levelID = id[5];\n            const descriptorID = id[id.length - 1];\n            let levelsInput = JSON.parse(FeditorHelper.getLevelsJSON(criteriaID));\n            levelsInput[levelID].definition.replace(/\\\\/g, ''); // Remove the //  from the string.\n            let definition = JSON.parse(levelsInput[levelID].definition);\n            let levelDescriptors = levelsInput[levelID].descriptors;\n\n            let descriptorids = [];\n            levelDescriptors.forEach(element => {\n                descriptorids.push(element.descriptorid);\n            }, descriptorids);\n\n\n            if (descriptorids.indexOf(parseInt(descriptorID)) == -1) {\n                const descText = document.getElementById(`advancedgrading-frubric-criteria-${criteriaID}-level-${levelID}-descriptor-${descriptorID}`).nextSibling.textContent;\n                const newdesc = {\n                    checked: false,\n                    descText: descText,\n                    delete: 0,\n                    descriptorid: descriptorID\n                }\n\n                levelDescriptors.push(newdesc);\n\n            }\n\n            levelDescriptors.filter(descriptor => {\n                if (descriptor.descriptorid == descriptorID) {\n                    descriptor.checked = !descriptor.checked;\n                }\n            }, descriptorID);\n\n\n            definition.descriptors = levelDescriptors;\n            definition = JSON.stringify(definition);\n\n            levelsInput[levelID].definition = definition;\n            // Replace the json value with the updated one\n            document.getElementById(`advancedgrading-frubric-${criteriaID}-leveljson`).value = JSON.stringify(levelsInput);\n            document.getElementById(`advancedgrading-frubric-${criteriaID}-leveljsonaux`).value = JSON.stringify(levelsInput);\n        }\n\n\n        EvaluateControl.prototype.focusEvaluationHandler = function (s, e) {\n\n            document.getElementById(e.target.id).addEventListener('change', s.onChangeEvaluationHandler.bind(this, s));\n            document.getElementById(e.target.id).addEventListener('change', s.sumTotal.bind(this, s));\n        }\n\n        EvaluateControl.prototype.onChangeEvaluationHandler = function (s, e) {\n\n           e.target.classList.remove('total-input-error');\n\n            let enteredscore = parseFloat(document.getElementById(e.target.id).value);\n            console.log(\"onChangeEvaluationHandler\");\n            console.log(enteredscore);\n            let maxscore = document.getElementById(e.target.id + '-out-of-value').innerText.split('/');\n            maxscore = parseFloat(maxscore[maxscore.length - 1]);\n            console.log(\"maxscore\");\n            console.log(maxscore);\n            if (enteredscore > maxscore || enteredscore < 0) {\n                e.target.classList.add('total-input-error');\n            } else {\n                document.getElementById(e.target.id).value = enteredscore;\n                document.getElementById(e.target.id).innerHTML = enteredscore;\n            }\n\n        }\n\n        EvaluateControl.prototype.sumTotal = function (s, e) {\n            var tables = document.getElementById('advancedgrading-criteria').querySelectorAll('.total-input');\n            var sum = 0;\n            var haserror = false;\n            var i = -1;\n\n            tables.forEach((t, index) => {\n\n                if (!t.classList.contains('result') && !t.classList.contains('total-input-error')) {\n                    sum += parseFloat(t.value);\n                }\n\n                if (t.classList.contains('result'))  {\n                    i = index;\n                }\n\n                if (t.classList.contains('total-input-error')) {\n                    haserror = true;\n                }\n\n                if (i > -1) {\n\n                    var maxtotal = parseFloat(tables[i].getAttribute('max'));\n                    if (!haserror && sum <= maxtotal) {\n                        tables[i].value = sum;\n                    }\n                }\n\n            });\n\n        }\n\n        return {\n            init: init\n        };\n    });"],"names":["define","FeditorHelper","EvaluateControl","this","criteria","JSON","parse","document","querySelector","getAttribute","definitionID","getElementById","prototype","main","setupEvents","forEach","element","self","level","criteriaid","children","addEventListener","focusEvaluationHandler","bind","Array","from","leveldetails","descriptors","descriptor","HTMLInputElement","type","clickDescriptorHandler","e","id","target","split","criteriaID","levelID","descriptorID","length","levelsInput","getLevelsJSON","definition","replace","levelDescriptors","descriptorids","push","descriptorid","indexOf","parseInt","newdesc","checked","descText","nextSibling","textContent","delete","filter","stringify","value","s","onChangeEvaluationHandler","sumTotal","classList","remove","enteredscore","parseFloat","console","log","maxscore","innerText","add","innerHTML","tables","querySelectorAll","sum","haserror","i","t","index","contains","maxtotal","init"],"mappings":"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"}